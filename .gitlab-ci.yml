stages:
- check
- build

pre-commit:
  stage: check
  image: python:3
  variables:
    GIT_CLONE_PATH: "${CI_BUILDS_DIR}/${CI_PROJECT_NAME}"
    PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/pip"
    PRE_COMMIT_HOME: "${CI_PROJECT_DIR}/.cache/pre-commit"
  cache:
    key: pre-commit
    paths:
    - .cache
  before_script:
  - pip install "pre-commit==2.21.0"
  script:
  - TMP_MSG_FILE="$(mktemp)"
  - git log -1 --pretty=%B > "${TMP_MSG_FILE}"
  - pre-commit run
      --all-files
      --color=always
      --show-diff-on-failure
      --hook-stage commit &&
    pre-commit run
      --all-files
      --color=always
      --show-diff-on-failure
      --hook-stage commit-msg
      --commit-msg-filename "${TMP_MSG_FILE}" &&
    pre-commit run
      --all-files
      --color=always
      --show-diff-on-failure
      --hook-stage post-commit ||
    {
      >&2 echo "pre-commit checks failed. Please consider installing pre-commit";
      >&2 echo "hooks in your local Git clone by running \`make git-hooks-install\`.";
      exit 1;
    }

build:
  stage: build
  image: alpine:latest
  before_script:
  - apk add --no-cache git make
  script:
  - make build
  artifacts:
    paths:
    - src/sysinfo
